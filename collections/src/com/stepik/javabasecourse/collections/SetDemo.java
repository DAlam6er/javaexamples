package com.stepik.javabasecourse.collections;

// обеспечивает уникальность содержащихся в ней элементов
public interface SetDemo<E> extends CollectionDemo<E>
{
    // не добавляет новых методов относительно Collection
    // только уточняет семантику существующих
    // equals сравнивает 2 set'а по содержимому

    // ** Реализации Set **
    // 1. HashSet использует hashcode объекта для определения ячейки таблицы,
    // куда нужно положить этот объект
    // equls затем используется для сравнения с элементами уже лежащими в этой ячейке таблицы
    // Set<ComplexNumber> numbers = new HashSet<>();
    // numbers.add(new ComplexNumber(3, 3));
    // numbers.remove(new ComplexNumber(3, 3));

    // equals() и hashcode() должны быть согласованными
    // a.equals(b) => a.hashCode() == b.hashCode()
    // Если этот контракт будет нарушен, то HashSet будет работать с элементами неправильно

    // Объект не должен меняться, пока он лежит в HashSet
    // точнее не должны меняться его поля, влияющие на вычисление equals и hashCode

    // Порядок обхода HashSet'а итератором
    // определяется раскладкой элементов по хеш-таблице,
    // которая в свою очередь определяется hashcode
    // случайному наблюдателю порядок будет казаться случайным

    // Если порядок обхода важен, следует использовать другую реализацию
    // 2. LinkedHashSet - провязывает все элементы в список в порядке их добавления
    // Set<String> words2 = new LinkedHashSet<>();
}
